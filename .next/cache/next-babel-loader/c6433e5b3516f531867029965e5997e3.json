{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport 'isomorphic-fetch';\nimport Error from 'next/error';\nimport Layout from '../components/Layout';\nimport ChannelGrid from '../components/ChannelGrid';\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default() {\n    _classCallCheck(this, _default);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(_default).apply(this, arguments));\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          channels = _this$props.channels,\n          statusCode = _this$props.statusCode;\n\n      if (statusCode !== 200) {\n        return __jsx(Error, {\n          statusCode: statusCode\n        });\n      }\n\n      return __jsx(Layout, {\n        title: \"Podcast\"\n      }, __jsx(ChannelGrid, {\n        channels: channels\n      }));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var res, req, _ref2, channels;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                res = _ref.res;\n                _context.prev = 1;\n                _context.next = 4;\n                return fetch('https://api.audioboom.com/channels/recommended');\n\n              case 4:\n                req = _context.sent;\n                _context.next = 7;\n                return req.json();\n\n              case 7:\n                _ref2 = _context.sent;\n                channels = _ref2.body;\n                return _context.abrupt(\"return\", {\n                  channels: channels,\n                  statusCode: 200\n                });\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](1);\n                res.statusCode = 503;\n                return _context.abrupt(\"return\", {\n                  channels: null,\n                  statusCode: 503\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 12]]);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["W:/nextjs/podcast/pages/index.js"],"names":["Error","Layout","ChannelGrid","props","channels","statusCode","res","fetch","req","json","body","React","Component"],"mappings":";;;;;;;;;AAAA,OAAO,kBAAP;AACA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;;;;;;;;;;;;;6BAgBa;AAAA,wBAC0B,KAAKC,KAD/B;AAAA,UACEC,QADF,eACEA,QADF;AAAA,UACYC,UADZ,eACYA,UADZ;;AAGL,UAAGA,UAAU,KAAK,GAAlB,EAAuB;AACnB,eAAO,MAAC,KAAD;AAAO,UAAA,UAAU,EAAEA;AAAnB,UAAP;AACH;;AAED,aAAO,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC;AAAd,SACH,MAAC,WAAD;AAAa,QAAA,QAAQ,EAAED;AAAvB,QADG,CAAP;AAGH;;;;;;;;;;;;;AAtB6BE,gBAAAA,G,QAAAA,G;;;uBAENC,KAAK,CAAC,gDAAD,C;;;AAAjBC,gBAAAA,G;;uBACyBA,GAAG,CAACC,IAAJ,E;;;;AAAlBL,gBAAAA,Q,SAANM,I;iDACE;AAACN,kBAAAA,QAAQ,EAARA,QAAD;AAAWC,kBAAAA,UAAU,EAAE;AAAvB,iB;;;;;AAEPC,gBAAAA,GAAG,CAACD,UAAJ,GAAiB,GAAjB;iDACO;AAACD,kBAAAA,QAAQ,EAAE,IAAX;AAAiBC,kBAAAA,UAAU,EAAE;AAA7B,iB;;;;;;;;;;;;;;;;;;;EATUM,KAAK,CAACC,S","sourcesContent":["import 'isomorphic-fetch';\r\nimport Error from 'next/error'\r\nimport Layout from '../components/Layout';\r\nimport ChannelGrid from '../components/ChannelGrid'\r\n\r\nexport default class extends React.Component {\r\n\r\n    static async getInitialProps({res}) {\r\n        try {\r\n            let req = await fetch('https://api.audioboom.com/channels/recommended')\r\n            let {body: channels} = await req.json()\r\n            return {channels, statusCode: 200}\r\n        }catch(e) {\r\n            res.statusCode = 503\r\n            return {channels: null, statusCode: 503}\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        const {channels, statusCode} = this.props;\r\n\r\n        if(statusCode !== 200) {\r\n            return <Error statusCode={statusCode}/>\r\n        }\r\n\r\n        return <Layout title=\"Podcast\">\r\n            <ChannelGrid channels={channels}/>\r\n        </Layout>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}